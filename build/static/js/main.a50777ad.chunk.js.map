{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/Scroll.js","Components/SearchBox.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","Components_Card","key","Scroll","props","style","overflowY","border","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","App","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","inherits","createClass","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","length","Components_SearchBox","Components_Scroll","Components_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Containers_App"],"mappings":"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","file":"static/js/main.a50777ad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card =({name, email, id}) => {\r\n    return (\r\n        <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src ={`https://robohash.org/${id}?200x200`} />\r\n        <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n   \r\n    return(\r\n    <div>\r\n      {\r\n      \r\n      robots.map((user, i) =>{\r\n        return ( \r\n        <Card \r\n        key={i} \r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email}\r\n        />\r\n    );\r\n})\r\n}\r\n    </div>\r\n   );\r\n\r\n}\r\n\r\n\r\nexport default CardList; ","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n        {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return(\r\n        <div className= 'pa2'>\r\n\r\n        <input \r\n        className= 'pa3 ba b--green bg-lightest-blue'\r\n        type='search' \r\n        placeholder='search robots' \r\n        onChange={searchChange}\r\n        \r\n        />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport Scroll from '../Components/Scroll';\r\nimport SearchBox from '../Components/SearchBox';\r\n\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component  {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n\r\n        }\r\n    }\r\n \r\n    componentDidMount() {\r\nfetch('https://jsonplaceholder.typicode.com/users')\r\n.then(response => response.json())\r\n.then(users => this.setState({ robots: users}));\r\n\r\n}\r\n        \r\n\r\n     onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n       \r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot =>{\r\n        return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        if(this.state.robots.length === 0){\r\n            return <h1>Loading</h1>\r\n        } else {\r\n         return (\r\n        <div className='tc'>\r\n        <h1> RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n        <CardList robots={filteredRobots} />\r\n        </Scroll>\r\n        </div>\r\n    );\r\n}\r\n}\r\n}\r\n\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}